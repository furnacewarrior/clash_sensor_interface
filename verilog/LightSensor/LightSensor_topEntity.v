/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 0.99.1. DO NOT MODIFY.
*/
module LightSensor_topEntity
    ( // Inputs
      input  clkA // clock
    , input  rstA // asynchronous reset: active high
    , input  clkB // clock
    , input  rstB // asynchronous reset: active high
    , input  miso 

      // Outputs
    , output wire [7:0] result_0 
    , output wire  result_1 
    , output wire  result_2 
    , output wire [1:0] result_3 // gated clock
    );
  wire [7:0] x;
  wire  y;
  wire  x_0;
  wire [1:0] clkOut;
  wire [17:0] tup;
  wire [12:0] ds;
  wire [1:0] spiToSensor1;
  wire [9:0] syncToInt;
  wire [9:0] y_0;
  wire [19:0] ds1;
  wire [19:0] tup1;
  wire [9:0] y_1;
  wire [9:0] x_1;
  wire [9:0] syncToDriver;
  wire [9:0] spiToDriver;
  wire [10:0] ds_fun_arg;
  wire [19:0] ds1_fun_arg;
  wire [19:0] tup1_fun_arg;
  wire [10:0] result;

  assign result = {x,y,x_0,clkOut};

  assign x = tup[17:10];

  assign y = spiToSensor1[0:0];

  assign x_0 = spiToSensor1[1:1];

  assign clkOut = ds[0:0];

  LightSensor_I_interface_sinterface LightSensor_I_interface_sinterface_tup
    ( .y (tup)
    , .clk (clkA)
    , .rst (rstA)
    , .i1 (syncToInt) );

  assign ds_fun_arg = {y_0,miso};

  LightSensor_spi_Ctrl LightSensor_spi_Ctrl_ds
    ( .result (ds)
    , .clk (clkB)
    , .rst (rstB)
    , .\input  (ds_fun_arg) );

  assign spiToSensor1 = ds[12:11];

  assign syncToInt = ds1[19:10];

  assign y_0 = tup1[9:0];

  assign ds1_fun_arg = {y_1,x_1};

  LightSensor_synchronizer LightSensor_synchronizer_ds1
    ( .result (ds1)
    , .clkA (clkA)
    , .rstA (rstA)
    , .clkB (clkB)
    , .rstB (rstB)
    , .ds1 (ds1_fun_arg) );

  assign tup1_fun_arg = {syncToDriver
                        ,spiToDriver};

  LightSensor_Ctrl_spi_lightSensor LightSensor_Ctrl_spi_lightSensor_tup1
    ( .y (tup1)
    , .clk (clkB)
    , .rst (rstB)
    , .\#arg  (tup1_fun_arg) );

  assign y_1 = tup[9:0];

  assign x_1 = tup1[19:10];

  assign syncToDriver = ds1[9:0];

  assign spiToDriver = ds[10:1];

  assign result_0 = result[10:3];

  assign result_1 = result[2:2];

  assign result_2 = result[1:1];

  assign result_3 = result[0:0];
endmodule

