/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 0.99.1. DO NOT MODIFY.
*/
module LightSensor_stimuliGenerator
    ( // Inputs
      input  clk // clock
    , input  rst // asynchronous reset: active high

      // Outputs
    , output wire  result 
    );
  reg [4:0] \#tup_app_arg ;
  reg [4:0] s;
  wire signed [63:0] wild;
  wire signed [63:0] \#wild_app_arg ;
  wire  \#tup_app_arg_selection_res ;
  wire [29:0] \#vecflat ;

  assign \#tup_app_arg_selection_res  = s < 5'd29;

  always @(*) begin
    if(\#tup_app_arg_selection_res )
      \#tup_app_arg  = s + 5'd1;
    else
      \#tup_app_arg  = s;
  end

  assign \#vecflat  = {1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b1
                      ,1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b1
                      ,1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b0
                      ,1'b1
                      ,1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b1
                      ,1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b0
                      ,1'b1
                      ,1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b1
                      ,1'b0
                      ,1'b0
                      ,1'b1
                      ,1'b0};

  // indexVec begin
  wire  vec [0:30-1];

  genvar i;
  generate
  for (i=0; i < 30; i=i+1) begin : mk_array
    assign vec[(30-1)-i] = \#vecflat [i*1+:1];
  end
  endgenerate

  assign result = vec[(wild)];
  // indexVec end

  // register begin
  always @(posedge clk or posedge rst) begin : LightSensor_stimuliGenerator_register
    if (rst) begin
      s <= 5'd0;
    end else begin
      s <= \#tup_app_arg ;
    end
  end
  // register end

  assign wild = $signed(\#wild_app_arg );

  assign \#wild_app_arg  = $unsigned(s);
endmodule

