/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 0.99.1. DO NOT MODIFY.
*/
module LightSensor_testBench
    ( // No inputs

      // Outputs
      output wire [7:0] dataOut 
    );
  wire  \#app_arg ;
  wire  \#app_arg_0 ;
  wire  \#app_arg_1 ;
  wire  \#app_arg_2 ;
  wire  \#app_arg_3 ;
  wire [10:0] \#case_scrut ;
  wire  input_0;
  wire  input_1;
  wire  input_2;
  wire  input_3;
  wire  input_4;
  wire [10:0] result;
  wire [7:0] result_0;
  wire  result_1;
  wire  result_2;
  wire [1:0] result_3;

  LightSensor_stimuliGenerator LightSensor_stimuliGenerator_app_arg
    ( .result (\#app_arg )
    , .clk (\#app_arg_1 )
    , .rst (\#app_arg_0 ) );

  // pragma translate_off
  reg  rst;
  initial begin
    #1    rst = 1;
    #1999 rst = 0;
  end
  assign \#app_arg_0  = rst;
  // pragma translate_on

  // pragma translate_off
  reg  clk;
  // 1 = 0.1ps
  localparam half_period = (500 / 2);
  always begin
    clk = 0;
    #3000 forever begin
      if (~ 1'b0) begin
        $finish;
      end
      clk = ~ clk;
      #half_period;
      clk = ~ clk;
      #half_period;
    end
  end
  assign \#app_arg_1  = clk;
  // pragma translate_on

  // pragma translate_off
  reg  rst_0;
  initial begin
    #1    rst_0 = 1;
    #1999 rst_0 = 0;
  end
  assign \#app_arg_2  = rst_0;
  // pragma translate_on

  // pragma translate_off
  reg  clk_0;
  // 1 = 0.1ps
  localparam half_period_0 = (500 / 2);
  always begin
    clk_0 = 0;
    #3000 forever begin
      if (~ 1'b0) begin
        $finish;
      end
      clk_0 = ~ clk_0;
      #half_period_0;
      clk_0 = ~ clk_0;
      #half_period_0;
    end
  end
  assign \#app_arg_3  = clk_0;
  // pragma translate_on

  assign input_0 = \#app_arg_3 ;

  assign input_1 = \#app_arg_2 ;

  assign input_2 = \#app_arg_1 ;

  assign input_3 = \#app_arg_0 ;

  assign input_4 = \#app_arg ;

  LightSensor_topEntity LightSensor_topEntity_case_scrut
    ( .clkA (input_0)
    , .rstA (input_1)
    , .clkB (input_2)
    , .rstB (input_3)
    , .miso (input_4)
    , .result_0 (result_0)
    , .result_1 (result_1)
    , .result_2 (result_2)
    , .result_3 (result_3) );

  assign result = {result_0
                  ,result_1
                  ,result_2
                  ,result_3};

  assign \#case_scrut  = result;

  assign dataOut = \#case_scrut [10:3];
endmodule

