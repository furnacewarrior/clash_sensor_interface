/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 0.99.3. DO NOT MODIFY.
*/
module SPI_Ctrl_testBench
    ( // No inputs

      // Outputs
      output wire [8:0] result 
    );
  wire [7:0] ds1;
  wire  ds2;
  wire [9:0] driver;
  wire [12:0] \#ds_case_scrut ;
  wire  \#ds_app_arg ;
  wire  \#ds_app_arg_0 ;
  wire  x;
  wire [7:0] x_0;
  wire  x_1;
  wire [9:0] ds;
  wire  clk;
  wire  rst;
  wire [10:0] spiIn;
  wire [9:0] driverOut;
  wire  sensorOut;
  wire [12:0] res;
  wire [1:0] sensorIn;
  wire [9:0] driverIn;
  wire [1:0] clkOut;

  assign ds1 = driver[9:2];

  assign ds2 = driver[1:1];

  assign driver = \#ds_case_scrut [10:1];

  assign clk = \#ds_app_arg ;

  assign rst = \#ds_app_arg_0 ;

  assign spiIn = {{x_0,x_1,1'b0},x};

  assign driverOut = spiIn[10:1];

  assign sensorOut = spiIn[0:0];

  SPI_Ctrl SPI_Ctrl_ds_case_scrut
    ( .clk (clk)
    , .rst (rst)
    , .driverOut (driverOut)
    , .sensorOut (sensorOut)
    , .sensorIn (sensorIn)
    , .driverIn (driverIn)
    , .clkOut (clkOut) );

  assign res = {sensorIn,driverIn,clkOut};

  assign \#ds_case_scrut  = res;

  // pragma translate_off
  reg  clk_0;
  // 1 = 0.1ps
  localparam half_period = (90000 / 2);
  always begin
    clk_0 = 0;
    #3000 forever begin
      if (~ 1'b0) begin
        $finish;
      end
      clk_0 = ~ clk_0;
      #half_period;
      clk_0 = ~ clk_0;
      #half_period;
    end
  end
  assign \#ds_app_arg  = clk_0;
  // pragma translate_on

  // pragma translate_off
  reg  rst_0;
  initial begin
    #1    rst_0 = 1;
    #1999 rst_0 = 0;
  end
  assign \#ds_app_arg_0  = rst_0;
  // pragma translate_on

  assign x = ds[0:0];

  assign x_0 = ds[9:2];

  assign x_1 = ds[1:1];

  SPI_Ctrl_stimuliGenerator SPI_Ctrl_stimuliGenerator_ds
    ( .result (ds)
    , .clk (\#ds_app_arg )
    , .rst (\#ds_app_arg_0 ) );

  assign result = {ds1,ds2};
endmodule

